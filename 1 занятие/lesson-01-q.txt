## 1. Какие еще существуют коды типов?
f - float
d - double
b - signed char
B - unsigned char
u - Unicode-символ
h - short
H - unsigned short
I - unsigned int
l - long
L - unsigned long
q - long long
Q - unsigned long long

## 2. Напишите код, подобный приведенному выше, но с другим типом
al = array.array('d', [46.0, 2.3, 3.14])
print(sys.getsizeof(al))
print(type(al))

## 3. Напишите код для создания массива с 5 значениями, располагающимися через равные интервалы в диапазоне от 0 до 1
array_linspace = np.linspace(0, 1, 5)
print(array_linspace)

## 4. Напишите код для создания массива с 5 равномерно распределенными случайными значениями в диапазоне от 0 до 1
array_uniform = np.random.uniform(0, 1, 5)
print(array_uniform)

## 5. Напишите код для создания массива с 5 нормально распределенными случайными значениями с мат. ожиданием = 0 и дисперсией 1
array_normal = np.random.normal(0, 1, 5)
print(array_normal)

## 6. Напишите код для создания массива с 5 случайными целыми числами в от [0, 10)
array_randint = np.random.randint(0, 10, 5)
print(array_randint)

## 7. Написать код для создания срезов массива 3 на 4
## - первые две строки и три столбца
## - первые три строки и второй столбец
## - все строки и столбцы в обратном порядке
## - второй столбец
## - третья строка
a[:2, :3]
a[:, 1:2]
a[::-1, ::-1]
a[:, 1]
a[2, :]

## 8. Продемонстрируйте, как сделать срез-копию
b = a[1:3:2].copy()

## 9. Продемонстрируйте использование newaxis для получения вектора-столбца и вектора-строки
vector_col = a[:, np.newaxis] # столбец
vector_row = a[np.newaxis, :] # строка

## 10. Разберитесь, как работает метод dstack
A = np.array([[1, 2], [3, 4]])
B = np.array([[5, 6], [7, 8]])
result = np.dstack((A, B))
print(result)
#[[[1 5]
  [2 6]]

 [[3 7]
  [4 8]]]#

## 11. Разберитесь, как работают методы split, vsplit, hsplit, dsplit
split - метод для разделения массива по указанной оси
a = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
parts = np.split(a, [3, 7])  # Разделение в индексах 3 и 7

vsplit - Разделяет массив по горизонтали
a = np.arange(12).reshape(3, 4)
parts = np.hsplit(a, 2)
print(*parts)
#[[ 0  1]
 [ 4  5]
 [ 8  9]]
[[ 2  3]
 [ 6  7]
 [10 11]]#

hsplit - Разделяет массив по вертикали
a = np.arange(12).reshape(3, 4)
parts = np.vsplit(a, 3)
print(*parts)
#[[0  1  2  3]]
[[4  5  6  7]]
[[8  9 10 11]]#

dsplit - делит массив по глубине
a = np.arange(24).reshape(2, 3, 4)
parts = np.dsplit(a, 2)
print(*parts)
#[[[ 0  1]
  [ 4  5]
  [ 8  9]]

 [[12 13]
  [16 17]
  [20 21]]]
[[[ 2  3]
  [ 6  7]
  [10 11]]

 [[14 15]
  [18 19]
  [22 23]]]#

## 12. Привести пример использования всех универсальных функций, которые я привел
x = np.array([1, 2, 3, 4, 5])
result = np.subtract(x, 2)  # Вычитание [-1 0 1 2 3]

result = np.divide(x, 2)  # Деление [0.5 1.  1.5 2.  2.5]

result = np.floor_divide(x, 2)  # Целочисленное деление [0 1 1 2 2]

result = np.power(x, 2)  # Возведение в степень [ 1  4  9 16 25]

result = np.mod(x, 2)  # Остаток от деления [1 0 1 0 1]