## 1. Разобраться как использовать мультииндексные ключи в данном примере
# index = [
#     ('city_1', 2010),
#     ('city_1', 2020),
#     ('city_2', 2010),
#     ('city_2', 2020),
#     ('city_3', 2010),
#     ('city_3', 2020),
# ]
# population = [
#     101,
#     201,
#     102,
#     202,
#     103,
#     203,
# ]

index = pd.MultiIndex.from_tuples(index)

# pop = pd.Series(population, index = index)
# pop_df = pd.DataFrame(
#     {
#         'total': pop,
#         'something': [
#             10,
#             11,
#             12,
#             13,
#             14,
#             15,
#         ]
#     }
# )
# ???? ## pop_df_1 = pop_df.loc???['city_1', 'something']
# ???? ## pop_df_1 = pop_df.loc???[['city_1', 'city_3'], ['total', 'something']]
# ???? ## pop_df_1 = pop_df.loc???[['city_1', 'city_3'], 'something']




# 2. Из получившихся данных выбрать данные по 
# - 2020 году (для всех столбцов)
# - job_1 (для всех строк)
# - для city_1 и job_2
data_2020 = data_df.loc[(['city_1', 'city_2'], 2020), :]
data_job_1 = data_df[[col for col in data_df.columns if col[1] == 'job_1']]
data_city_1_job_2 = data_df.loc['city_1', [col for col in data_df.columns if col[1] == 'job_2']]



# 3. Взять за основу DataFrame со следующей структурой
# index = pd.MultiIndex.from_product(
#     [
#         ['city_1', 'city_2'],
#         [2010, 2020]
#     ],
#     names=['city', 'year']
# )
# columns = pd.MultiIndex.from_product(
#     [
#         ['person_1', 'person_2', 'person_3'],
#         ['job_1', 'job_2']
#     ],
#     names=['worker', 'job']
# )
# 
# Выполнить запрос на получение следующих данных
# - все данные по person_1 и person_3
# - все данные по первому городу и первым двум person-ам (с использование срезов)
#
# Приведите пример (самостоятельно) с использованием pd.IndexSlice
selected_people = df.loc[:, ['person_1', 'person_3']]
selected_city_people = df.loc['city_1', 'person_1':'person_2']

selected_people = df.loc[:, pd.IndexSlice[['person_1', 'person_3'], :]]
selected_city_people = df.loc[pd.IndexSlice['city_1', :], pd.IndexSlice['person_1':'person_2', :]]



#4. Привести пример использования inner и outer джойнов для Series (данные примера скорее всего нужно изменить)
# ser1 = pd.Series(['a', 'b', 'c'], index=[1,2,3])
# ser2 = pd.Series(['b', 'c', 'f'], index=[4,5,6])

# print (pd.concat([ser1, ser2], join='outer'))
# print (pd.concat([ser1, ser2], join='inner'))

print(pd.concat([ser1, ser2], axis=1, join='outer'))
print(pd.concat([ser1, ser2], axis=1, join='inner'))
обычно с dataFrame используются